{"version":3,"sources":["components/Form.js","components/Todo.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setinputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","name","type","className","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","map","items","filter","el","Todolist","filteredTodos","App","useState","status","setfilterTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29b7540e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setinputText, todos, setTodos, inputText, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    console.log(e.target.name);\r\n\r\n    setinputText(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 }, // static allocation of value in array\r\n    ]);\r\n    setinputText(\"\");\r\n  };\r\n\r\n  const statusHandler = (e) => {\r\n    console.log(e);\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n    console.log(todo);\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((items) => {\r\n        if (items.id === todo.id) {\r\n          return {\r\n            ...items,\r\n            completed: !items.completed,\r\n          };\r\n        }\r\n        return items;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item   ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst Todolist = ({ todos, setTodos, filteredTodos }) => {\r\n  console.log(todos);\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            key={todo.id}\r\n            todo={todo}\r\n            text={todo.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todolist;\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nimport Todolist from \"./components/Todolist\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [inputText, setinputText] = useState(\"\"); // send prop fromupper to lower that why all intialization here\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setfilterTodos] = useState([]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setfilterTodos(todos.filter((todo) => todo.completed === true));\n        console.log(todos);\n        console.log(\"above\");\n        break;\n\n      case \"uncompleted\":\n        setfilterTodos(todos.filter((todo) => todo.completed === false));\n        break;\n\n      default:\n        setfilterTodos(todos);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    filterHandler();\n    console.log(\"inside useeffect\");\n  }, [todos, status]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Sticky Notes</h1>\n      </header>\n\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setinputText={setinputText}\n        setStatus={setStatus}\n      />\n      <Todolist\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}